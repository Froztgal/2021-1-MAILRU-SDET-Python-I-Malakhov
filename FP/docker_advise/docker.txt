1. Устанавливаю приложение в докер
	docker load -i D:\tmp\myapp
2. БД
	В cmd: (Запустить БД в отдельном контейнере)
		docker run --name test_sql -e MYSQL_ROOT_PASSWORD=pass -p 3306:3306 -d percona:latest
	В CLI docker: (Зайти в поднятую БД под пользователем root и паролем ROOT_PASSWORD)
	Уже реализовал это в коде
		mysql -h127.0.0.1 -P3306 -uroot -ppass
		CREATE DATABASE test_db;
		USE test_db;
		CREATE TABLE `test_users` (
  `id` int NOT NULL AUTO_INCREMENT,
  `username` varchar(16) DEFAULT NULL,
  `password` varchar(255) NOT NULL,
  `email` varchar(64) NOT NULL,
  `access` smallint DEFAULT NULL,
  `active` smallint DEFAULT NULL,
  `start_active_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `email` (`email`),
  UNIQUE KEY `ix_test_users_username` (`username`)
);
    Это непонятно как в код засунуть
		CREATE USER 'test_qa' IDENTIFIED BY 'qa_test';
		GRANT ALL PRIVILEGES ON * . * TO 'test_qa';
		FLUSH PRIVILEGES;
3. Mock
    В терминале pycharm
    docker build -t my_mock_vk:latest FP/mock_VK/
    В CMD
	docker run --name my_mock_vk -p 8083:8083 -d my_mock_vk:latest
3.1 Selenoid
    В CMD:
    docker run -d --name selenoid -p 4444:4444 -v //var/run/docker.sock:/var/run/docker.sock -v /c/users/ilya/.aerokube/selenoid:/etc/selenoid:ro aerokube/selenoid:latest-release
    docker run -d --name selenoid-ui --link selenoid -p 8081:8080 aerokube/selenoid-ui:latest --selenoid-uri http://selenoid:4444
4. Запуск myapp (config.txt скинуть на D в корень)
	docker run --name mapp -v "/D/tmp/config.txt":"/D/tmp/config.txt" -p 8080:8080 --link test_sql:test_sql --link my_mock_vk:my_mock_vk myapp /app/myapp --config="/D/tmp/config.txt"
5. Запуск тестов и генерация allure отчета
    pytest -s -l -v FP\tests\ --selenoid --alluredir=C:\tests
    allure serve C:\tests
